{"version":3,"sources":["components/Home/Home.module.scss","components/Home/Home.jsx","components/Example/Example.jsx","components/Pokemon/PokemonView/PokemonView.jsx","components/PokemonView/PokemonView.jsx","components/Pokemon/Pokemon.jsx","components/Gallery/Gallery.jsx","components/Detail/Detail.jsx","components/App/App.jsx","serviceWorker.js","index.js","components/Pokemon/PokemonView/PokemonView.module.scss","components/Example/Example.module.scss","components/Pokemon/Pokemon.module.scss"],"names":["module","exports","Home","react_default","a","createElement","className","HomeCss","Link","to","Button","Component","PokemonView","Object","entries","this","props","pokemon","length","constructor","Card","PokemonViewCss","abilitiesView","abilities","map","ability","idx","Label","key","name","Content","Header","PokemonViewHeader","Meta","id","src","sprites","front_default","alt","concat","url","index","link","Gallery","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","arr","i","push","state","classifier","checkHandler","bind","assertThisInitialized","view","src_components_PokemonView_PokemonView","Detail","pokeIndex","match","params","prev","Number","next","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","PokemonView-header","Example","Example-header","Pokemon","Pokemon-header"],"mappings":"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","file":"static/js/main.4ec47527.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__3vI8C\"};","import React, { Component } from 'react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Home as HomeCss} from './Home.module.scss'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className={HomeCss}>\r\n        <h1>Welcome to my Pokemon Site!</h1>\r\n\r\n        <Link to=\"/gallery\">\r\n          <Button>\r\n            Gallery\r\n          </Button>\r\n        </Link>\r\n\r\n         <Link to=\"/pokemon\">\r\n          <Button>\r\n            Search\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport { Example as ExampleCss, ExampleHeader } from './Example.module.scss'\r\n\r\nclass Example extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className={ExampleCss}>\r\n        <h1 className={ExampleHeader}>This is another page!</h1>\r\n        <Link to=\"/\">\r\n          <Button>\r\n            Click here to go back to the landing page\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Example\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card, Label } from 'semantic-ui-react'\r\n\r\nimport { PokemonView as PokemonViewCss, PokemonViewHeader } from './PokemonView.module.scss'\r\n\r\nclass PokemonView extends Component {\r\n  render() {\r\n    // Check if the object is empty\r\n    const noPokemon = Object.entries(this.props.pokemon).length === 0\r\n      && this.props.pokemon.constructor === Object;\r\n\r\n    if (noPokemon) {\r\n      return (\r\n        <Card className={PokemonViewCss}>\r\n          <h3>No Pokemon yet!</h3>\r\n        </Card>\r\n      )\r\n    } else {\r\n      // Iterate over the Pokemon's abilities and generate a label for each.\r\n      const abilitiesView = this.props.pokemon.abilities.map((ability, idx) => {\r\n        return (\r\n          // Using `idx` as a key is generally discouraged:\r\n          // https://reactjs.org/docs/lists-and-keys.html#keys\r\n          <Label key={idx}>\r\n            {ability.ability.name}\r\n          </Label>\r\n        )\r\n      });\r\n\r\n      // Display some data about the Pokemon, and its abilities.\r\n      return (\r\n        <Card className={PokemonViewCss}>\r\n          <Card.Content>\r\n            <Card.Header className={PokemonViewHeader}>\r\n              {this.props.pokemon.name}\r\n            </Card.Header>\r\n            <Card.Meta>\r\n              Pokedex #{this.props.pokemon.id}\r\n            </Card.Meta>\r\n            <img\r\n              src={this.props.pokemon.sprites.front_default}\r\n              alt={`Sprite of ${this.props.pokemon.name}`}\r\n            />\r\n            <h4>Abilities</h4>\r\n            {abilitiesView}\r\n          </Card.Content>\r\n        </Card>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nPokemonView.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    id: PropTypes.number,\r\n    abilities: PropTypes.arrayOf(PropTypes.shape({\r\n      ability: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      })\r\n    })),\r\n    sprites: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport default PokemonView\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './PokemonView.css'\r\nimport {Button} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass PokemonView extends Component {\r\n  render() {\r\n    // // Check if the object is empty\r\n    // const noPokemon = Object.entries(this.props.pokemon).length === 0\r\n    //   && this.props.pokemon.constructor === Object;\r\n    //\r\n    // if (noPokemon) {\r\n    //   return (\r\n    //     <Card className={PokemonViewCss}>\r\n    //       <h3>No Pokemon yet!</h3>\r\n    //     </Card>\r\n    //   )\r\n    // } else {\r\n    //   // Iterate over the Pokemon's abilities and generate a label for each.\r\n    //   const abilitiesView = this.props.pokemon.abilities.map((ability, idx) => {\r\n    //     return (\r\n    //       // Using `idx` as a key is generally discouraged:\r\n    //       // https://reactjs.org/docs/lists-and-keys.html#keys\r\n    //       <Label key={idx}>\r\n    //         {ability.ability.name}\r\n    //       </Label>\r\n    //     )\r\n    //   });\r\n      const url = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${this.props.index}.png`;\r\n      const link = `/detail/${this.props.index}`\r\n      return (\r\n          <span>\r\n              <Link to={link}>\r\n            <img src={url} />\r\n            </Link>\r\n          </span>\r\n      )\r\n  }\r\n}\r\n\r\nPokemonView.propTypes = {\r\n    index: PropTypes.number\r\n}\r\n\r\nexport default PokemonView\r\n","import React, { Component } from 'react'\r\nimport { Button, Input } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\n\r\nimport PokemonView from './PokemonView/PokemonView'\r\n\r\nimport { Pokemon as PokemonCss, PokemonHeader } from './Pokemon.module.scss'\r\n\r\nclass Pokemon extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      pokemon: {},\r\n    };\r\n\r\n    this.baseUrl = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  clickHandler() {\r\n    // Form the URL\r\n    let url = `${this.baseUrl}${this.state.value}`;\r\n\r\n    // GET some data back!\r\n    axios.get(url).then((response) => {\r\n      console.log(response);\r\n\r\n      this.setState({\r\n        pokemon: response.data\r\n      });\r\n\r\n      console.log(this.state.pokemon);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  inputChangeHandler(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={PokemonCss}>\r\n        <h1 className={PokemonHeader}>Let's GET us a Pokemon!</h1>\r\n\r\n        <Input\r\n          onChange={this.inputChangeHandler}\r\n          label='https://pokeapi.co/api/v2/pokemon/'\r\n          placeholder='Pokemon # here!'\r\n          value={this.state.value}\r\n        />\r\n        <Button onClick={this.clickHandler}>\r\n          GET\r\n        </Button>\r\n\r\n        <PokemonView pokemon={this.state.pokemon} />\r\n        {/*<PokemonView pokemon={this.state.pokemon} />*/}\r\n        {/*<PokemonView pokemon={this.state.pokemon} />*/}\r\n        {/*<PokemonView pokemon={this.state.pokemon} />*/}\r\n        {/*<PokemonView pokemon={this.state.pokemon} />*/}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Pokemon\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Button, Label} from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport PokemonView from '../PokemonView/PokemonView'\r\n\r\nimport './Gallery.css'\r\n\r\nclass Gallery extends Component {\r\n    constructor() {\r\n    super();\r\n    var arr = [];\r\n     for (var i = 1; i < 152; i++) {\r\n        arr.push(i);\r\n     }\r\n    this.state = {\r\n      classifier: '',\r\n      pokemon: arr\r\n    };\r\n    this.url = 'https://pokeapi.co/api/v2/pokemon/?limit=1000';\r\n    // this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n    this.checkHandler = this.checkHandler.bind(this);\r\n    }\r\n\r\n    checkHandler() {\r\n    // // Form the URL\r\n    // let url = `${this.baseUrl}${this.state.value}`;\r\n    //\r\n    // // GET some data back!\r\n    // axios.get(url).then((response) => {\r\n    //   console.log(response);\r\n    //\r\n    //   this.setState({\r\n    //     pokemon: response.data\r\n    //   });\r\n    //\r\n    //   console.log(this.state.pokemon);\r\n    // }).catch((error) => {\r\n    //   console.log(error);\r\n    // });\r\n  }\r\n\r\n\r\n  render() {\r\n     const view = this.state.pokemon.map((i) => {\r\n        return (\r\n          <PokemonView index={i} />\r\n        )\r\n      });\r\n\r\n    return (\r\n     <div>\r\n         <Link to=\"/\">\r\n          <Button>\r\n            Home\r\n          </Button>\r\n        </Link>\r\n        <div className=\"GalleryCss\">\r\n            {view}\r\n        </div>\r\n     </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Gallery\r\n","import React, { Component } from 'react'\r\nimport './Detail.css'\r\nimport axios from \"axios\";\r\nimport {Button, Label} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Detail extends Component {\r\n\r\n  render() {\r\n    const pokeIndex = this.props.match.params.index\r\n    let url = `https://pokeapi.co/api/v2/pokemon/${pokeIndex}`;\r\n    const prev = `/detail/${Number(pokeIndex)-1}`\r\n    const next = `/detail/${Number(pokeIndex)+1}`\r\n    // var test = {}\r\n    // axios.get(url).then((response) => {\r\n    //     test=response;\r\n    //     console.log(\"inner\",test);\r\n    //   // this.setState({\r\n    //   //   pokemon: response.data\r\n    //   // });\r\n    // }).catch((error) => {\r\n    //   console.log(error);\r\n    // });\r\n    //\r\n    // console.log(\"outer\",test);\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n          <Link to={prev}>\r\n          <Button>\r\n            Prev\r\n          </Button>\r\n        </Link>\r\n          <Link to={next} className=\"DetailRight\">\r\n          <Button >\r\n            Next\r\n          </Button>\r\n        </Link>\r\n          <div className=\"DetailContent\">\r\n          {url}\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Detail\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport Home from '../Home/Home.jsx';\r\nimport Example from '../Example/Example.jsx';\r\nimport Pokemon from '../Pokemon/Pokemon.jsx';\r\nimport Gallery from '../Gallery/Gallery.jsx';\r\nimport Detail from '../Detail/Detail.jsx';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home}/>\r\n              {/*<Route exact path=\"/example\" component={Example}/>*/}\r\n              {/*<Route exact path=\"/pokemon\" component={Pokemon}/>*/}\r\n              <Route exact path=\"/gallery\" component={Gallery}/>\r\n              <Route path=\"/detail/:index\" component={Detail}/>\r\n            </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonView\":\"PokemonView_PokemonView__3LUYi\",\"PokemonView-header\":\"PokemonView_PokemonView-header__1OXei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Example\":\"Example_Example__11c-E\",\"Example-header\":\"Example_Example-header__3UNYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pokemon\":\"Pokemon_Pokemon__956e7\",\"Pokemon-header\":\"Pokemon_Pokemon-header__1rbjR\"};"],"sourceRoot":""}